diff --git a/config.h b/config.h
index 1c0b587..1145467 100644
--- a/config.h
+++ b/config.h
@@ -1,5 +1,8 @@
 /* See LICENSE file for copyright and license details. */
 
+/* provides XF86 media key support */
+#include <X11/XF86keysym.h>
+
 /* appearance */
 static const unsigned int borderpx  = 1;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
@@ -12,10 +15,23 @@ static const char col_gray2[]       = "#444444";
 static const char col_gray3[]       = "#bbbbbb";
 static const char col_gray4[]       = "#eeeeee";
 static const char col_cyan[]        = "#005577";
+
+static const char norm_fg[] = "#aec2c0";
+static const char norm_bg[] = "#0D1C1E";
+static const char norm_border[] = "#798786";
+
+static const char sel_fg[] = "#aec2c0";
+static const char sel_bg[] = "#982C33";
+static const char sel_border[] = "#aec2c0";
+
+static const char urg_fg[] = "#aec2c0";
+static const char urg_bg[] = "#194C5E";
+static const char urg_border[] = "#194C5E";
+
 static const char *colors[][3]      = {
-	/*               fg         bg         border   */
-	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
+    /*               fg           bg         border                         */
+    [SchemeNorm] = { norm_fg,     norm_bg,   norm_border }, // unfocused wins
+    [SchemeSel]  = { sel_fg,      sel_bg,    sel_border },  // the focused win
 };
 
 /* tagging */
@@ -28,7 +44,6 @@ static const Rule rules[] = {
 	 */
 	/* class      instance    title       tags mask     isfloating   monitor */
 	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
 };
 
 /* layout(s) */
@@ -59,41 +74,55 @@ static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn()
 static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
 static const char *termcmd[]  = { "st", NULL };
 
+static const char *inc_backlight[] = {"xbacklight","-inc", "10", NULL };
+static const char *dec_backlight[] = {"xbacklight","-dec", "10", NULL };
+
+static const char *raise_volume[] = {"amixer","-q", "sset", "Master", "10%+", NULL };
+static const char *lower_volume[] = {"amixer","-q", "sset", "Master", "10%-", NULL };
+static const char *mute_volume[] = {"amixer", "sset", "Master", "toggle", NULL };
+static const char *mute_mic[] = {"amixer", "set", "Capture", "toggle", NULL };
+
 static Key keys[] = {
-	/* modifier                     key        function        argument */
-	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
-	{ MODKEY,                       XK_b,      togglebar,      {0} },
-	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
-	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
-	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
-	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
-	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
-	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
-	{ MODKEY,                       XK_Return, zoom,           {0} },
-	{ MODKEY,                       XK_Tab,    view,           {0} },
-	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
-	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
-	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
-	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
-	{ MODKEY,                       XK_space,  setlayout,      {0} },
-	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
-	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
-	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
-	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
-	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
-	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
-	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
-	TAGKEYS(                        XK_1,                      0)
-	TAGKEYS(                        XK_2,                      1)
-	TAGKEYS(                        XK_3,                      2)
-	TAGKEYS(                        XK_4,                      3)
-	TAGKEYS(                        XK_5,                      4)
-	TAGKEYS(                        XK_6,                      5)
-	TAGKEYS(                        XK_7,                      6)
-	TAGKEYS(                        XK_8,                      7)
-	TAGKEYS(                        XK_9,                      8)
-	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+	/* modifier                     key        	   		function        argument */
+	{ 0, 				XF86XK_MonBrightnessUp,		spawn,		{.v = inc_backlight } },
+	{ 0, 				XF86XK_MonBrightnessDown,	spawn,		{.v = dec_backlight } },
+	{ 0, 				XF86XK_AudioRaiseVolume,	spawn,		{.v = raise_volume } },
+	{ 0, 				XF86XK_AudioLowerVolume,	spawn,		{.v = lower_volume } },
+	{ 0, 				XF86XK_AudioMute,		spawn,		{.v = mute_volume } },
+	{ 0, 				XF86XK_AudioMicMute,		spawn,		{.v = mute_mic } },
+	{ MODKEY,                       XK_p, 				spawn,          {.v = dmenucmd } },
+	{ MODKEY,             		XK_Return,			spawn,          {.v = termcmd } },
+	{ MODKEY,                       XK_b,      			togglebar,      {0} },
+	{ MODKEY,                       XK_j,      			focusstack,     {.i = +1 } },
+	{ MODKEY,                       XK_k,      			focusstack,     {.i = -1 } },
+	{ MODKEY,                       XK_i,      			incnmaster,     {.i = +1 } },
+	{ MODKEY,                       XK_d,      			incnmaster,     {.i = -1 } },
+	{ MODKEY,                       XK_h,      			setmfact,       {.f = -0.05} },
+	{ MODKEY,                       XK_l,      			setmfact,       {.f = +0.05} },
+	{ MODKEY,                       XK_Return, 			zoom,           {0} },
+	{ MODKEY,                       XK_Tab,    			view,           {0} },
+	{ MODKEY,	                XK_q,      			killclient,     {0} },
+	{ MODKEY,                       XK_t,      			setlayout,      {.v = &layouts[0]} },
+	{ MODKEY,                       XK_f,      			setlayout,      {.v = &layouts[1]} },
+	{ MODKEY,                       XK_m,      			setlayout,      {.v = &layouts[2]} },
+	{ MODKEY,                       XK_space,  			setlayout,      {0} },
+	{ MODKEY|ShiftMask,             XK_space,  			togglefloating, {0} },
+	{ MODKEY,                       XK_0,      			view,           {.ui = ~0 } },
+	{ MODKEY|ShiftMask,             XK_0,      			tag,            {.ui = ~0 } },
+	{ MODKEY,                       XK_comma,  			focusmon,       {.i = -1 } },
+	{ MODKEY,                       XK_period, 			focusmon,       {.i = +1 } },
+	{ MODKEY|ShiftMask,             XK_comma,  			tagmon,         {.i = -1 } },
+	{ MODKEY|ShiftMask,             XK_period, 			tagmon,         {.i = +1 } },
+	TAGKEYS(                        XK_1,                      			0)
+	TAGKEYS(                        XK_2,                      			1)
+	TAGKEYS(                        XK_3,                      			2)
+	TAGKEYS(                        XK_4,                      			3)
+	TAGKEYS(                        XK_5,                      			4)
+	TAGKEYS(                        XK_6,                      			5)
+	TAGKEYS(                        XK_7,                      			6)
+	TAGKEYS(                        XK_8,                      			7)
+	TAGKEYS(                        XK_9,                      			8)
+	{ MODKEY|ShiftMask,             XK_q,      quit,           			{0} },
 };
 
 /* button definitions */
